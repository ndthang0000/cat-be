components:
  schemas:
    TranslationMemory:
      type: object
      properties:
        user_id:
          type: string
        word:
          type: string
        translate:
          type: string
      example:
        id: 5ebac534954b54139806c112
        word: A dog
        mean: Một con chó

    Project:
      type: object
      properties:
        project_name:
          type: string
        user_id:
          type: string
        source_language:
          type: string
        target_language:
          type: string
        date_modified:
          type: date
      example:
        project_name: test
        user_id: 5ebac534954b54139806c112
        source_language: english
        target_language: vietnamese

    Translate:
      type: object
      properties:
        project_id:
          type: string
        source:
          type: string
        target:
          type: string
      example:
        project_id: 5ebac534954b54139806c112
        source: dog
        target: chó

    Dictionary:
      type: object
      properties:
        dictionary_name:
          type: string
        dictionary_code:
          type: string
        source_language:
          type: string
        target_language:
          type: string
      example:
        dictionary_name: english_to_vietnamese
        dictionary_code: 5ebac534954b54139806c112
        source_language: english
        target_language: vietnamese

    Word:
      type: object
      properties:
        dictionary_id:
          type: string
        word:
          type: string
        mean:
          type: string
      example:
        dictionary_id: 5ebac534954b54139806c112
        word: dog
        mean: chó

    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [user, admin]
      example:
        id: 5ebac534954b54139806c112
        email: fake@example.com
        name: fake name
        role: user

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
